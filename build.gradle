buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

// apply Gradle plugins
plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
}

apply plugin: 'license'

defaultTasks 'clean', 'licenseFormat', 'build'

// Project information
group = 'net.caseif.flint.spleef'
version = '1.0.0-SNAPSHOT'

// Extended project information
ext.projectName = 'flintspleef'
ext.description = 'A technology demonstration for the Flint framework.'
ext.inceptionYear = '2015'
ext.packaging = 'jar'
ext.author = 'Max Roncac√©'
ext.versionSuffix = version.contains('SNAPSHOT') ? (
        (
            System.getenv('GIT_COMMIT') ? ('-git('
            + (System.getenv('GIT_BRANCH').contains('/')
                    ? System.getenv('GIT_BRANCH').split('/')[1]
                    : System.getenv('GIT_BRANCH')) + '-'
            + System.getenv('GIT_COMMIT').substring(0, 7) + ')') : ''
        )
        + (System.getenv('BUILD_NUMBER') ? '-jnks' + System.getenv('BUILD_NUMBER') : '')
) : ''

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    deployerJars
}


// Project repositories
repositories {
    mavenCentral()
    maven { url 'http://repo.caseif.net/content/groups/public/' }
    maven { url 'http://hub.spigotmc.org/nexus/content/groups/public/' }
}

// Project dependencies
dependencies {
	compile 'net.caseif.flint:flint:1.0-SNAPSHOT'
    compile 'org.bukkit:bukkit:1.8.8-R0.1-SNAPSHOT'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from 'LICENSE'
}

// License header formatting
license {
    header file('LICENSE')
    excludes([
            '**/*.properties',
            '**/*.yml'
    ])
    sourceSets = project.sourceSets
    ignoreFailures false
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

// check code style
checkstyle {
    configProperties = [
            'name'        : project.name,
            'year'        : project.inceptionYear
    ]
    configFile = file('etc/checkstyle.xml')
}

tasks.withType(Checkstyle){
    exclude '**/*.properties'
    exclude '**/*.yml'
}

jar.manifest.mainAttributes(
        'Created-By': System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        'Implementation-Title': name,
        'Implementation-Version': version + versionSuffix,
        'Implementation-Vendor': author
)

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.resources
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourceJar
}
